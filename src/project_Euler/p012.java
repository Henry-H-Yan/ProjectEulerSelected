package project_Euler;
/**
 * The sequence of triangle numbers is generated by 
 * adding the natural numbers. So the 7th triangle number
 *  would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
 * @author henry-yan
 *
 */
public class p012 {

	public static void main(String[] args) {

		int num = 0;
		for (int i = 1; ; i++) {
			num += i;  // num is triangle number i
			if (countDivisors(num) > 500)
				System.out.println( Integer.toString(num));
		}
	}


	private static int countDivisors(int n) {
		int count = 0;
		int end = (int) Math.sqrt(n);
		for (int i = 1; i < end; i++) {
			if (n % i == 0)
				count += 2;
		}
		if (end * end == n) { // num is perfect square
			count++;
		}
		return count;
	}

}
